{"version":3,"sources":["assets/profile-pics/boy-2.png","assets/profile-pics/boy.png","assets/profile-pics/girl.png","assets/profile-pics/girl-1.png","assets/profile-pics/girl-2.png","assets/profile-pics/man.png","components/accountInformation.js","components/settingsInformation.js","components/contactInformation.js","components/activities.js","components/userProfile.js","assets/profile-pics/loadProfilePics.js","components/imageGallery.js","components/userForm.js","state/initialState.js","App.js","serviceWorker.js","index.js","assets/profile-pics/boy-1.png"],"names":["module","exports","AccountInformation","accountInformation","this","props","Fragment","className","dob","bio","React","Component","SettingsInformation","renderSettings","settings","map","setting","key","name","value","ContactInformation","info","email","phone","href","link","Activity","getIcon","activity","icon","toLowerCase","includes","renderAcitivity","activities","timestamp","UserProfile","userProfile","src","logo","alt","location","data-toggle","id","contacts","boyLogo1","require","boyLogo2","ImageGallery","currentLogo","profileImages","image","onClick","onImageSelect","UserForm","handleChange","date","formattedDate","months","getMonth","getDate","getFullYear","actions","handleDate","handleSettings","node","settingsIndex","target","split","toggleSettings","userInfo","handleLogo","onChange","handleName","type","placeholder","handleEmail","handleLocation","placeholderText","selected","Date","dateFormat","handlePhone","handleLink","checked","htmlFor","handleBio","rows","style","resize","password","App","state","setState","index","initialState","val","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec30fe33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boy-2.99e8fdf6.png\";","module.exports = __webpack_public_path__ + \"static/media/boy.d7fd9e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/girl.543cca41.png\";","module.exports = __webpack_public_path__ + \"static/media/girl-1.0a7ca2a2.png\";","module.exports = __webpack_public_path__ + \"static/media/girl-2.e1b10c9b.png\";","module.exports = __webpack_public_path__ + \"static/media/man.6f2bab19.png\";","import React from \"react\";\n\nclass AccountInformation extends React.Component {\n    render() {\n        const { accountInformation } = this.props;\n        return (\n            <React.Fragment>\n                <h4>Account Information</h4>\n                <div className=\"d-block\">\n                    <span>{accountInformation.dob}</span>\n                </div>\n                <div className=\"d-block mt-2\">\n                    <strong>Bio</strong>\n                </div>\n                <hr />\n                <p>{accountInformation.bio}</p>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AccountInformation;","import React from 'react';\n\nclass SettingsInformation extends React.Component {\n    renderSettings = settings => {\n        return settings.map(setting => {\n            return <div key={setting.name} className=\"d-flex justify-content-between\">\n                <span>{setting.name}</span>\n                <span className={`text-dark glyphicon ${setting.value ? \"glyphicon-star\" : \"glyphicon-star-empty\"}`}></span>\n            </div>\n        })\n    }\n\n    render() {\n        const {settings} = this.props;\n        return(\n            <React.Fragment>\n                <h4>Settings</h4>\n                {this.renderSettings(settings)}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SettingsInformation;","import React from \"react\"\n\nclass ContactInformation extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <h4>Contact us</h4>\n                <div className=\"d-flex flex-column\">\n                    <div className=\"d-block\"><strong className=\"mr-3\">Email:</strong>{this.props.info.email}</div>\n                    <div className=\"d-block\"><strong className=\"mr-3\">Phone:</strong>{this.props.info.phone}</div>\n                    <hr />\n                    <a href={\"https://\"+this.props.info.link}>View page</a>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ContactInformation;","import React from 'react';\n\nclass Activity extends React.Component {\n    getIcon = activity => {\n        activity = activity.toLowerCase();\n        let icon = \"glyphicon-heart text-danger\";\n        if(activity.includes(\"follow\")) {\n            icon = \"glyphicon-tasks text-primary\"\n        } else if(activity.includes(\"react\")) {\n            icon = \"glyphicon-fire text-warning\"\n        } \n        if(activity.includes(\"comment\")) {\n            icon = \"glyphicon-comment text-primary\";\n        }\n        return icon;\n    }\n\n    renderAcitivity = activities => {\n        return activities.map(activity =>\n            <li key={activity.name} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                <div className=\"d-inline\">\n                    <span className={`glyphicon ${this.getIcon(activity.name)} mr-3`}></span>\n                    {activity.name}\n                </div>\n                <span className=\"badge badge-primary badge-pill p-2\">{activity.timestamp}</span>\n            </li>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <h4>Recent Activities</h4>\n                <ul className=\"list-group list-group-flush\">\n                    {this.renderAcitivity(this.props.activities)}\n                </ul>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Activity;","import React from \"react\";\nimport AccountInformation from \"./accountInformation\";\nimport SettingsInformation from \"./settingsInformation\";\nimport ContactInformation from \"./contactInformation\";\nimport Activity from \"./activities\";\n\nclass UserProfile extends React.Component {\n    render() {\n        const { userProfile } = this.props;\n        const { accountInformation } = userProfile;\n        return (<React.Fragment>\n            <div className=\"container p-5\">\n                <div className=\"row profile-info-contaienr\">\n                    <div className=\"col-sm-6 col-md-6 user-details\">\n                        <div className=\"user-image\">\n                            <img src={userProfile.logo} alt=\"\" className=\"img-circle user-image-container\" />\n                        </div>\n                        <div className=\"user-info-block\">\n                            <div className=\"user-heading\">\n                                <h3>{userProfile.name}</h3>\n                                <span className=\"help-block\">{userProfile.location}</span>\n                            </div>\n                            <ul className=\"navigation\">\n                                <li className=\"active\">\n                                    <a data-toggle=\"tab\" href=\"#information\">\n                                        <span className=\"glyphicon glyphicon-user\"></span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a data-toggle=\"tab\" href=\"#settings\">\n                                        <span className=\"glyphicon glyphicon-cog\"></span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a data-toggle=\"tab\" href=\"#email\">\n                                        <span className=\"glyphicon glyphicon-envelope\"></span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a data-toggle=\"tab\" href=\"#events\">\n                                        <span className=\"glyphicon glyphicon-calendar\"></span>\n                                    </a>\n                                </li>\n                            </ul>\n                            <div className=\"user-body border\">\n                                <div className=\"tab-content\">\n                                    <div id=\"information\" className=\"tab-pane active\">\n                                        <AccountInformation accountInformation={accountInformation} />\n                                    </div>\n                                    <div id=\"settings\" className=\"tab-pane\">\n                                        <SettingsInformation settings={userProfile.settings} />\n                                    </div>\n                                    <div id=\"email\" className=\"tab-pane\">\n                                        <ContactInformation info={userProfile.contacts} />\n                                    </div>\n                                    <div id=\"events\" className=\"tab-pane\">\n                                        <Activity activities={userProfile.activities} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>);\n    }\n}\n\nexport default UserProfile;","const boyLogo1 = require(\"./boy-1.png\");\nconst boyLogo2 = require(\"./boy-2.png\");\nconst boyLogo = require(\"./boy.png\");\nconst girlLogo = require(\"./girl.png\");\nconst girlLogo1 = require(\"./girl-1.png\");\nconst girlLogo2 = require(\"./girl-2.png\");\nconst manLogo = require(\"./man.png\");\n\nexport default [\n    boyLogo, boyLogo1, boyLogo2,\n    girlLogo, girlLogo1, girlLogo2,\n    manLogo,\n]","import React from \"react\";\nimport profileImages from \"../assets/profile-pics/loadProfilePics\";\n\nclass ImageGallery extends React.Component {\n    render() {\n        const {currentLogo} = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div id=\"mdb-lightbox-ui\"></div>\n                        <div className=\"mdb-lightbox no-margin\">\n                            {profileImages.map(image => {\n                                return <figure onClick={() => this.props.onImageSelect(image)} key={image} className=\"cursor-pointer col-md-3 image-gallery-item\">\n                                    { \n                                        currentLogo === image && <span className=\"border border-success p-2 selected-image-badge text-success glyphicon glyphicon-ok\"></span>\n                                    }\n                                    <img src={image} alt=\"\" className=\"img-fluid\"/>\n                                </figure>\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ImageGallery;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ImageGallery from './imageGallery';\n\nclass UserForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ]\n    }\n\n    handleChange = (date) => {\n        let formattedDate = `${this.months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n        this.props.actions.handleDate(formattedDate);\n    }\n\n    handleSettings = (node) => {\n        let settingsIndex = node.target.id.split(\"-\")[2];\n        this.props.actions.toggleSettings(settingsIndex);\n    }\n\n    render() {\n        const { userInfo } = this.props;\n        return (\n            <div className=\"container p-5\">\n                <ImageGallery onImageSelect={this.props.actions.handleLogo} currentLogo = {userInfo.logo} />\n                <form>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input onChange={this.props.actions.handleName} value={userInfo.name} type=\"text\" placeholder=\"Your name\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Email</label>\n                                <input onChange={this.props.actions.handleEmail} value={userInfo.accountInformation.email} type=\"text\" placeholder=\"Email address\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" placeholder=\"password\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Confirm password</label>\n                                <input type=\"password\" placeholder=\"password confirmation\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Location</label>\n                                <input onChange={this.props.actions.handleLocation} value={userInfo.location} type=\"text\" placeholder=\"Location\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Date of birth</label><br />\n                                <DatePicker\n                                    onChange={this.handleChange}\n                                    placeholderText=\"Date of birth\"\n                                    className=\"form-control form-control-lg\"\n                                    selected={new Date(userInfo.accountInformation.dob)}\n                                    dateFormat=\"MMM dd, yyyy\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row mb-2\">\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Phone number</label>\n                                <input onChange={this.props.actions.handlePhone} value={userInfo.contacts.phone} type=\"text\" placeholder=\"Phone number\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"form-group\">\n                                <label>Page link</label>\n                                <input onChange={this.props.actions.handleLink} value={userInfo.contacts.link} type=\"text\" placeholder=\"Link to your page / profile\" className=\"form-control form-control-lg\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input onChange={this.handleSettings} className=\"form-check-input\" id={`settings-index-${0}`} type=\"checkbox\" value={userInfo.settings[0].value} checked={userInfo.settings[0].value} />\n                        <label className=\"form-check-label\" htmlFor={`settings-index-${0}`}>Show Notifications</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input onChange={this.handleSettings} className=\"form-check-input\" id={`settings-index-${1}`} type=\"checkbox\" value={userInfo.settings[1].value} checked={userInfo.settings[1].value} />\n                        <label className=\"form-check-label\" htmlFor={`settings-index-${1}`}>Dark theme</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input onChange={this.handleSettings} className=\"form-check-input\" id={`settings-index-${2}`} type=\"checkbox\" value={userInfo.settings[2].value} checked={userInfo.settings[2].value} />\n                        <label className=\"form-check-label\" htmlFor={`settings-index-${2}`}>Ad-Blocks</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input onChange={this.handleSettings} id={`settings-index-${3}`} className=\"form-check-input\" type=\"checkbox\" value={userInfo.settings[3].value} checked={userInfo.settings[3].value} />\n                        <label className=\"form-check-label\" htmlFor={`settings-index-${3}`}>Email updates</label>\n                    </div>\n                    <div className=\"form-group mt-2\">\n                        <label>Bio</label>\n                        <textarea className=\"form-control form-control-lg\" onChange={this.props.actions.handleBio} value={userInfo.accountInformation.bio} rows=\"7\" style={{ resize: \"none\" }}></textarea>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default UserForm;","import profileImages from \"../assets/profile-pics/loadProfilePics\";\n\nexport default {\n    name: 'Karthikeyini SK',\n    logo: profileImages[0],\n    location: 'Chennai, India',\n    accountInformation: {\n        email: 'karthikeyini@gmail.com',\n        password: '*********',\n        dob: \"November 14, 1997\",\n        bio: \"Biodata is an abbreviation for the term biographical data. ... The biodata format includes relevant factual information about an individual, such as: personal information (e.g., date of birth, gender, marital status, religion, height, complexion, father's name, etc.) educational background. occupational history.\"\n    },\n    settings: [\n        { name: \"Show Notification\", value: true },\n        { name: \"Dark theme\", value: false },\n        { name: \"Ad-Blocks\", value: false },\n        { name: \"Send email updates\", value: true }\n    ],\n    contacts: {\n        phone: \"+91 9983092199\",\n        email: \"karthikeyini@gmail.com\",\n        link: \"www.google.com\"\n    },\n    activities: [\n        {\n            name: \"Started following Mark Zuckerberg\",\n            timestamp: \"1d ago\",\n        },\n        {\n            name: \"Liked StarSport's page\",\n            timestamp: \"1d ago\",\n        },\n        {\n            name: \"Reacted to Remote's profile pic\",\n            timestamp: \"1d ago\",\n        },\n        {\n            name: \"Liked Gold's comment\",\n            timestamp: \"1d ago\",\n        },\n    ],\n}","import React from 'react';\nimport './App.css';\nimport UserProfile from './components/userProfile';\nimport UserForm from './components/userForm';\nimport initialState from \"./state/initialState\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userProfile: initialState,\n    }\n\n    this.actions = {\n      handleName: val => this.setState({userProfile: {...this.state.userProfile, name: val.target.value}}),\n      handleEmail: this.handleEmail,\n      handleLocation: node => this.setState({userProfile: {...this.state.userProfile, location: node.target.value}}),\n      handleDate: date => this.setState({userProfile: {...this.state.userProfile, accountInformation: {...this.state.userProfile.accountInformation, dob: date}}}),\n      handlePhone: node => this.setState({userProfile: {...this.state.userProfile, contacts: {...this.state.userProfile.contacts, phone: node.target.value}}}),\n      handleLink: node => this.setState({userProfile: {...this.state.userProfile, contacts: {...this.state.userProfile.contacts, link: node.target.value}}}),\n      handleBio: node => this.setState({userProfile: {...this.state.userProfile, accountInformation: {...this.state.userProfile.accountInformation, bio: node.target.value}}}),\n      handleLogo: logo => this.setState({userProfile: {...this.state.userProfile, logo}}),\n      toggleSettings: this.toggleSettings,\n    }\n  }\n\n  handleEmail = node => {\n    let email = node.target.value;\n    const {accountInformation, contacts} = this.state.userProfile;\n    accountInformation.email = email;\n    contacts.email = email;\n\n    this.setState({userProfile: {...this.state.userProfile, accountInformation, contacts}});\n  }\n\n  toggleSettings = index => {\n    const {settings} = this.state.userProfile;\n\n    settings[index].value = !settings[index].value;\n    this.setState({userProfile: {...this.state.userProfile, settings}});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 col-sm-3 form-wrapper border-right\">\n            <UserForm userInfo = {this.state.userProfile} actions = {this.actions} />\n          </div>\n          <div className=\"col-12 col-md-6 col-sm-9\">\n            <UserProfile userProfile={this.state.userProfile} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/boy-1.44a5c053.png\";"],"sourceRoot":""}